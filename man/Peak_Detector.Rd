% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SProcessing.R
\name{Peak_Detector}
\alias{Peak_Detector}
\title{Peak_Detector}
\usage{
Peak_Detector(
  Dp,
  filein,
  fileout,
  keyCode = "Identifiant_MALDI",
  speColumn = "Taxonomie",
  t = "sqrt",
  smooth = "SavitzkyGolay",
  baseline = "SNIP",
  normalization = "TIC",
  Iter = 100,
  SN_R = 2,
  minFreq = 0.25,
  align = TRUE
)
}
\arguments{
\item{Dp:}{folder containing the ".mzXML" files,}

\item{filein:}{metadata input csv file,}

\item{fileout:}{output csv file,}

\item{keyCode:}{code for dataframe joining (default value:"Identifiant_MALDI"),}

\item{speColumn:}{taxonomic identification of isolate  (default value, speColumn="Taxonomie"),}

\item{t:}{spectrum transformation, (default value, t="sqrt"), "log"}

\item{smooth:}{smoothing method,   (default value smooth="SavitzkyGolay"), "MovingAverage", "WMovingAverage"}

\item{baseline:}{baseline removing method, (default value, baseline="SNIP"), "TopHat", "ConvexHull"}

\item{normalization:}{normalization algorithm (default value, normalization="TIC"), PQN}

\item{Iter:}{number of iterations for baseline removing (default value, Iter=100)}

\item{SN_R:}{signal_to_noise ratio (default value, SN_R=2),}

\item{minFreq:}{the minimum peak frequency for spectrum selection (default value, minFreq=0.25),}

\item{align:}{boolean Boolean parameter to indicate whether or not spectrum alignment is performed (default value, align=TRUE)}
}
\value{
merged dataframes and csv file
}
\description{
Peak_Detector is a pipeline of two stages for 1) import and processing of Maldi_Tof spectra and 2) peak detection
}
\details{
stage 1) import, check of quality, transformation, smoothing, baseline removing, normalization, and alignment of MALDI_TOF spectra

stage 2) peak detection, binning, filtering and merging with metadata ("Filtered_Meta.csv")
}
\examples{
 df_Peaks<-Peak_Detector("newdata", "Filtered_Meta.csv", "Filtered_Meta_Peaks.csv"),
           df_Peaks_0<-Peak_Detector("newdata", "Filtered_Meta.csv", "Filtered_Meta_Peaks_0.csv", minFreq=0, align=FALSE)
           df_PeaksTH<-Peak_Detector"newdata", "Filtered_Meta.csv", "Filtered_Meta_Peaks.csv", baseline="TopHat")
}
